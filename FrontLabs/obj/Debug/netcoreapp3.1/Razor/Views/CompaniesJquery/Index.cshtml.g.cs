#pragma checksum "C:\Users\matroskin\source\repos\FrontLabs\FrontLabs\Views\CompaniesJquery\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bc3e44d0ac1110baee8f118dac45196b7f695b96"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CompaniesJquery_Index), @"mvc.1.0.view", @"/Views/CompaniesJquery/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\matroskin\source\repos\FrontLabs\FrontLabs\Views\_ViewImports.cshtml"
using FrontLabs;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\matroskin\source\repos\FrontLabs\FrontLabs\Views\_ViewImports.cshtml"
using FrontLabs.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bc3e44d0ac1110baee8f118dac45196b7f695b96", @"/Views/CompaniesJquery/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"eb62ab383fc02b8ec3c47505fab9645dafd68696", @"/Views/_ViewImports.cshtml")]
    public class Views_CompaniesJquery_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("formadura4ka"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc3e44d0ac1110baee8f118dac45196b7f695b963912", async() => {
                WriteLiteral("\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<style>
    #label {
        font-size: 40px;
        padding-bottom: 10px;
        letter-spacing: 10px;
        font-weight: bold;
    }

    .company-item {
        margin-bottom: 20px;
        border: 1px solid gainsboro;
        padding: 5px;
        max-width: 350px;
    }

    .card-body span {
        margin-bottom: 20px;
        height: 20px;
    }

    #form-container {
        top: 90px;
        right: 30%;
        position: absolute;
    }

    .delete {
        background-color: #f44336;
    }

    .update {
        background-color: yellow;
    }
</style>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc3e44d0ac1110baee8f118dac45196b7f695b965642", async() => {
                WriteLiteral("\r\n    <div>\r\n        <span id=\"label\">Companies</span>\r\n        <div id=\"companies-container\"></div>\r\n        <div id=\'form-container\'>\r\n            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc3e44d0ac1110baee8f118dac45196b7f695b966061", async() => {
                    WriteLiteral(@"
                <div class=""form-group"">
                    <label for=""name"">Name</label>
                    <input id=""name"" type=""text"" class=""form-control"" aria-describedby=""emailHelp"" placeholder=""Enter name"">
                </div>
                <button type=""submit"" id=""sub-btn"" class=""btn btn-primary"">Submit</button>
            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
        </div>
    </div>
    <script type=""text/javascript"">
        var items = null;
        var isUpdate = false;
        var updateItemId = '';
        const api = '/api/Companies';
        function GET() {
            var container = document.getElementById('companies-container');
            $('#companies-container').empty();
            function renderCompany(item) {
                var div = document.createElement('div');
                div.classList.add('company-item');
                var company = '<div class=""card""><div class=""card-body""> ' +
                    '<span>Id :' + item.id + '</span><br />' +
                    '<span>Name :' + item.name + '</span><br />' +
                    '<div className=""d-flex""> ' +
                    `<button class=""btn btn-warning btn-update"" onclick=""redirectToEdit('${item.id}')"">Update</button> ` +
                    `<button class=""btn btn-danger"" onclick=""DeleteCompany('${item.id}')"">Delete</button>` +
                    '</div>'");
                WriteLiteral(@"
                    + '</div>'
                    + '</div>';
                div.innerHTML = company;
                container.appendChild(div);
            }
            $.ajax({
                type: ""GET"",
                url: api,
                dataType: ""json"",
                contentType: ""application/json; charset=utf-8"",
                processdata: true,
                success: function (response) {
                    items = response;
                    response.forEach(renderCompany);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(xhr.statusText);
                }
            });
        }
        function CreateCompany(data) {
            var jsonData = JSON.stringify(data);
            $.ajax({
                type: ""POST"",
                url: api,
                data: jsonData,
                dataType: 'json',
                contentType: ""application/json; charset=utf-8"",
                su");
                WriteLiteral(@"ccess: function (response) {
                    parent.postMessage(JSON.stringify({ type: 'POST' }));
                    GET();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(xhr.statusText);
                }
            });
        }

        function DeleteCompany(id) {
            $.ajax({
                url: `${api}/${id}`,
                type: 'DELETE',
                success: function (result) {
                    parent.postMessage(JSON.stringify({ type: 'DELETE', payload: id }));
                    GET();
                }
            });

        }

        $(""#sub-btn"").click(function () {
            var data = {
                Name: $('#name').val(),
            };
            CreateCompany(data);
            return false;
        });


        const redirectToEdit = (modelId) => window.location.replace(`../../gui/companiesjquery/edit/${modelId}`);

        GET();














");
                WriteLiteral(@"




















                // async function getCompanies() {
                //     const response = await fetch(api, {
                //         method: ""GET"",
                //         headers: { ""Accept"": ""application/json"" }
                //     })
                //     if (response.ok === true) {
                //         const companies = await response.json();
                //         let rows = document.querySelector(""tbody"");
                //         companies.map(el => {
                //             rows.append(row(el));
                //         })
                //     }
                // }

                // async function getCompany(id) {
                //     const response = await fetch(`${api}/${id}`, {
                //         method: ""GET"",
                //         headers: { ""Accept"": ""application/json"" }
                //     });
                //     if (response.ok === true) {
                //         const com");
                WriteLiteral(@"pany = await response.json();
                //         const form = document.forms[""companiesForm""];
                //         form.elements[""id""].value = company.id;
                //         form.elements[""name""].value = company.name;
                //     }
                // }

                // async function createCompany(companyName) {

                //     const response = await fetch(api, {
                //         method: ""POST"",
                //         headers: { ""Accept"": ""application/json"", ""Content-Type"": ""application/json"" },
                //         body: JSON.stringify({
                //             name: companyName,
                //         })
                //     });
                //     if (response.ok === true) {
                //         const company = await response.json();
                //         reset();
                //         document.querySelector(""tbody"").append(row(company));
                //     }
                // }

   ");
                WriteLiteral(@"             // async function editCompany(companyId, companyName) {
                //     const response = await fetch(`${api}/${companyId}`, {
                //         method: ""PUT"",
                //         headers: { ""Accept"": ""application/json"", ""Content-Type"": ""application/json"" },
                //         body: JSON.stringify({
                //             id: parseInt(companyId, 10),
                //             name: companyName
                //         })
                //     });
                //     if (response.ok === true) {
                //         const company = await response.json();
                //         reset();
                //         document.querySelector(""tr[data-rowid='"" + company.id + ""']"").replaceWith(row(company));
                //     }
                // }

                // async function deleteCompany(id) {
                //     const response = await fetch(`${api}/${id}`, {
                //         method: ""DELETE"",
          ");
                WriteLiteral(@"      //         headers: { ""Accept"": ""application/json"" }
                //     });
                //     if (response.ok === true) {
                //         const company = await response.json();
                //         document.querySelector(""tr[data-rowid='"" + company.id + ""']"").remove();
                //     }
                // }

                // const reset = () => {
                //     const form = document.forms[""companiesForm""];
                //     form.reset();
                //     form.elements[""id""].value = 0;
                // }

                // const row = (company) => {
                //     const tr = document.createElement('tr');
                //     tr.setAttribute('data-rowid', company.id);

                //     const idTd = document.createElement('td');
                //     idTd.append(company.id);
                //     tr.append(idTd);

                //     const nameTd = document.createElement(""td"");
                //     nameTd");
                WriteLiteral(@".append(company.name);
                //     tr.append(nameTd);

                //     const linksTd = document.createElement(""td"");

                //     const editLink = document.createElement(""a"");
                //     editLink.setAttribute(""data-id"", company.id);
                //     editLink.setAttribute(""style"", ""display: inline; margin: 0 3px"");

                //     editLink.className = 'btn btn-warning';
                //     editLink.append(""Изменить"");
                //     editLink.addEventListener(""click"", e => {

                //         e.preventDefault();
                //         getCompany(company.id);
                //     });
                //     linksTd.append(editLink)

                //     const removeLink = document.createElement(""a"");
                //     removeLink.setAttribute(""data-id"", company.id);
                //     removeLink.setAttribute(""style"", ""display: inline; margin: 0 3px"");
                //     removeLink.append(""Удалить"")");
                WriteLiteral(@";
                //     removeLink.className = 'btn btn-danger'
                //     removeLink.addEventListener(""click"", e => {

                //         e.preventDefault();
                //         deleteCompany(company.id);
                //     });

                //     linksTd.append(removeLink);
                //     tr.appendChild(linksTd);


                //     return tr;
                // }


                // document.forms[""companiesForm""].addEventListener(""submit"", e => {
                //     e.preventDefault();
                //     const form = document.forms[""companiesForm""];
                //     const id = form.elements[""id""].value;
                //     const name = form.elements[""name""].value;
                //     if (id == 0)
                //         createCompany(name);
                //     else
                //         editCompany(id, name);
                // });

                // getCompanies();
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
